ad_ → Administración (usuarios, roles, unidades, avisos, etc.)
cn_ → Contabilidad/finanzas (conceptos, cuotas, pagos).
----------------------------------------------------------------------------
--                          USUARIOS
----------------------------------------------------------------------------
CREATE TABLE public.ad_usuario (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	nombre varchar(100) NOT NULL,
	correo varchar(254) NOT NULL,
	estado bool NOT NULL,
	foto varchar(255) NULL,
	"password" varchar(255) NOT NULL,
	CONSTRAINT ad_usuario_correo_key UNIQUE (correo),
	CONSTRAINT ad_usuario_pkey PRIMARY KEY (id)
);

----------------------------------------------------------------------------
--                          ROLES
----------------------------------------------------------------------------
CREATE TABLE public.ad_rol (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	nombre varchar(50) NOT NULL,
	descripcion varchar(100) NULL,
	estado bool NOT NULL,
	CONSTRAINT ad_rol_descripcion_key UNIQUE (descripcion),
	CONSTRAINT ad_rol_nombre_key UNIQUE (nombre),
	CONSTRAINT ad_rol_pkey PRIMARY KEY (id)
);


----------------------------------------------------------------------------
--                          USUARIO-ROLES
----------------------------------------------------------------------------

CREATE TABLE public.ad_usuariorol (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	rol_id int8 NOT NULL,
	usuario_id int8 NOT NULL,
	CONSTRAINT ad_usuariorol_pkey PRIMARY KEY (id),
	CONSTRAINT ad_usuariorol_usuario_id_rol_id_96e40066_uniq UNIQUE (usuario_id, rol_id)
);
-- public.ad_usuariorol foreign keys

ALTER TABLE public.ad_usuariorol ADD CONSTRAINT ad_usuariorol_rol_id_ce86a1ab_fk_ad_rol_id FOREIGN KEY (rol_id) REFERENCES public.ad_rol(id) DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE public.ad_usuariorol ADD CONSTRAINT ad_usuariorol_usuario_id_3b3a11cd_fk_ad_usuario_id FOREIGN KEY (usuario_id) REFERENCES public.ad_usuario(id) DEFERRABLE INITIALLY DEFERRED;


----------------------------------------------------------------------------
--                          RECURSOS
----------------------------------------------------------------------------
CREATE TABLE public.ad_recurso (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	nombre varchar(50) NOT NULL,
	descripcion varchar(200) NULL,
	CONSTRAINT ad_recurso_pkey PRIMARY KEY (id)
);

----------------------------------------------------------------------------
--                          ROL-RECURSO
----------------------------------------------------------------------------

CREATE TABLE public.ad_rolrecurso (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	recurso_id int8 NOT NULL,
	rol_id int8 NOT NULL,
	subrecurso_id int8 NOT NULL,
	CONSTRAINT ad_rolrecurso_pkey PRIMARY KEY (id),
	CONSTRAINT ad_rolrecurso_rol_id_recurso_id_subrecurso_id_a94b1633_uniq UNIQUE (rol_id, recurso_id, subrecurso_id)
);

-- public.ad_rolrecurso foreign keys

ALTER TABLE public.ad_rolrecurso ADD CONSTRAINT ad_rolrecurso_recurso_id_d7eb8de9_fk_ad_recurso_id FOREIGN KEY (recurso_id) REFERENCES public.ad_recurso(id) DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE public.ad_rolrecurso ADD CONSTRAINT ad_rolrecurso_rol_id_b136cbf1_fk_ad_rol_id FOREIGN KEY (rol_id) REFERENCES public.ad_rol(id) DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE public.ad_rolrecurso ADD CONSTRAINT ad_rolrecurso_subrecurso_id_7db8fdde_fk_ad_subrecurso_id FOREIGN KEY (subrecurso_id) REFERENCES public.ad_subrecurso(id) DEFERRABLE INITIALLY DEFERRED;

----------------------------------------------------------------------------
--                          SUBRECURSOS
----------------------------------------------------------------------------
CREATE TABLE public.ad_subrecurso (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	nombre varchar(50) NOT NULL,
	descripcion varchar(200) NULL,
	url varchar(100) NULL,
	recurso_id int8 NOT NULL,
	CONSTRAINT ad_subrecurso_pkey PRIMARY KEY (id)
);

-- public.ad_subrecurso foreign keys

ALTER TABLE public.ad_subrecurso ADD CONSTRAINT ad_subrecurso_recurso_id_7959e74d_fk_ad_recurso_id FOREIGN KEY (recurso_id) REFERENCES public.ad_recurso(id) DEFERRABLE INITIALLY DEFERRED;


----------------------------------------------------------------------------
--                          ZONAS / BLOQUES
----------------------------------------------------------------------------
CREATE SEQUENCE public.ad_zona_idzona_seq START WITH 1;

CREATE TABLE public.ad_zona (
  idzona        INTEGER DEFAULT NEXTVAL('public.ad_zona_idzona_seq') NOT NULL,
  nombre        VARCHAR(50) NOT NULL UNIQUE, -- Ej: 'Bloque 1', 'Bloque 2'
  descripcion   TEXT,
  estado        BOOLEAN NOT NULL DEFAULT TRUE,
  PRIMARY KEY (idzona)
);

-- Valores iniciales
INSERT INTO public.ad_zona (nombre, descripcion) VALUES
('Bloque 1', 'Zona residencial bloque 1'),
('Bloque 2', 'Zona residencial bloque 2'),
('Bloque 3', 'Zona residencial bloque 3');
----------------------------------------------------------------------------
--                        UNIDAD HABITACIONAL
----------------------------------------------------------------------------
CREATE SEQUENCE public.ad_unidad_idunidad_seq START WITH 1;

CREATE TABLE public.ad_unidad (
  idunidad        INTEGER DEFAULT NEXTVAL('public.ad_unidad_idunidad_seq') NOT NULL,
  fecha_alta      TIMESTAMP DEFAULT now() NULL,
  idusuario_alta  INTEGER NOT NULL,
  codigo          VARCHAR(20) NOT NULL,
  idzona          INTEGER NOT NULL,
  estado          BOOLEAN NOT NULL,
  PRIMARY KEY (idunidad),
  FOREIGN KEY (idusuario_alta) REFERENCES public.ad_usuario(id),
  FOREIGN KEY (idzona) REFERENCES public.ad_zona(idzona)
);


----------------------------------------------------------------------------
--                  TIPO DE DOCUMENTO DE IDENTIDAD
----------------------------------------------------------------------------
CREATE SEQUENCE public.ad_tipo_documento_identidad_id_seq START WITH 1;

CREATE TABLE public.ad_tipo_documento_identidad (
  idtipo_documento_identidad INTEGER DEFAULT NEXTVAL('public.ad_tipo_documento_identidad_id_seq') NOT NULL,
  nombre                     VARCHAR(50) NOT NULL UNIQUE, -- Ej: CI, NIT, PASAPORTE
  descripcion                TEXT,
  estado                     BOOLEAN NOT NULL DEFAULT TRUE,
  PRIMARY KEY (idtipo_documento_identidad)
);

-- Valores iniciales
INSERT INTO public.ad_tipo_documento_identidad (nombre, descripcion) VALUES
('CI', 'Cédula de identidad'),
('NIT', 'Número de Identificación Tributaria'),
('PASAPORTE', 'Documento de viaje internacional');

----------------------------------------------------------------------------
--                        RESIDENTES 
----------------------------------------------------------------------------
CREATE SEQUENCE public.ad_residente_idresidente_seq START WITH 1;

CREATE TABLE public.ad_residente (
  idresidente           INTEGER DEFAULT NEXTVAL('public.ad_residente_idresidente_seq') NOT NULL,
  idunidad              INTEGER NOT NULL,
  fecha_alta            TIMESTAMP DEFAULT now() NULL,
  idusuario_alta        INTEGER NOT NULL,
  nombres               VARCHAR(100) NOT NULL,
  apellido1             VARCHAR(50) NOT NULL,
  apellido2             VARCHAR(50) NOT NULL,
  idtipo_documento_identidad INTEGER NOT NULL,
  numero_documento      VARCHAR(50) NOT NULL,
  extension_documento   VARCHAR(10), -- Ej: SC, LP, CB
  correo_electronico    VARCHAR(100),
  relacion              VARCHAR(50), -- PROPIETARIO, INQUILINO, FAMILIAR
  estado                BOOLEAN NOT NULL,
  PRIMARY KEY (idresidente),
  FOREIGN KEY (idusuario_alta) REFERENCES public.ad_usuario(id),
  FOREIGN KEY (idunidad) REFERENCES public.ad_unidad(idunidad),
  FOREIGN KEY (idtipo_documento_identidad) REFERENCES public.ad_tipo_documento_identidad(idtipo_documento_identidad)
);


----------------------------------------------------------------------------
--                        FOTOS DE RESIDENTES 
----------------------------------------------------------------------------
CREATE SEQUENCE public.ad_residente_foto_id_seq START WITH 1;

CREATE TABLE public.ad_residente_foto (
  idfoto             INTEGER DEFAULT NEXTVAL('public.ad_residente_foto_id_seq') NOT NULL,
  idresidente        INTEGER NOT NULL,
  url_imagen         TEXT NOT NULL, -- ruta en S3 o local
  fecha_registro     TIMESTAMP DEFAULT now(),
  tipo               VARCHAR(20), -- 'ENTRENAMIENTO', 'VERIFICACION', etc.
  estado             BOOLEAN NOT NULL DEFAULT TRUE,
  PRIMARY KEY (idfoto),
  FOREIGN KEY (idresidente) REFERENCES public.ad_residente(idresidente)
);

----------------------------------------------------------------------------
--                        VEHICULOS DE RESIDENTES 
----------------------------------------------------------------------------
CREATE SEQUENCE public.ad_vehiculo_idvehiculo_seq START WITH 1;

CREATE TABLE public.ad_vehiculo (
  idvehiculo         INTEGER DEFAULT NEXTVAL('public.ad_vehiculo_idvehiculo_seq') NOT NULL,
  idunidad           INTEGER NOT NULL,
  marca              VARCHAR(50),
  modelo             VARCHAR(50),
  color              VARCHAR(30),
  placa              VARCHAR(20) NOT NULL,
  estado             BOOLEAN NOT NULL DEFAULT TRUE,
  fecha_registro     TIMESTAMP DEFAULT now(),
  PRIMARY KEY (idvehiculo),
  FOREIGN KEY (idunidad) REFERENCES public.ad_unidad(idunidad)
);

----------------------------------------------------------------------------
--                        FOTOGRAFIAS DE VEHICULOS 
----------------------------------------------------------------------------
CREATE SEQUENCE public.ad_vehiculo_foto_id_seq START WITH 1;

CREATE TABLE public.ad_vehiculo_foto (
  idfoto             INTEGER DEFAULT NEXTVAL('public.ad_vehiculo_foto_id_seq') NOT NULL,
  idvehiculo         INTEGER NOT NULL,
  url_imagen         TEXT NOT NULL,
  fecha_registro     TIMESTAMP DEFAULT now(),
  tipo               VARCHAR(20), -- 'PLACA_DELANTERA', 'PLACA_TRASERA', 'GENERAL'
  estado             BOOLEAN NOT NULL DEFAULT TRUE,
  PRIMARY KEY (idfoto),
  FOREIGN KEY (idvehiculo) REFERENCES public.ad_vehiculo(idvehiculo)
);


----------------------------------------------------------------------------
--                        AVISOS GENERALES
----------------------------------------------------------------------------
CREATE SEQUENCE public.ad_aviso_idaviso_seq START WITH 1;

CREATE TABLE public.ad_aviso (
  idaviso           INTEGER DEFAULT NEXTVAL('public.ad_aviso_idaviso_seq') NOT NULL,
  fecha_alta        TIMESTAMP DEFAULT now() NULL,
  idusuario_alta    INTEGER NOT NULL,
  titulo            VARCHAR(100) NOT NULL,
  contenido         TEXT NOT NULL,
  fecha_publicacion DATE NOT NULL,
  estado            BOOLEAN NOT NULL DEFAULT TRUE,
  PRIMARY KEY (idaviso),
  FOREIGN KEY (idusuario_alta) REFERENCES public.ad_usuario(id)
);



----------------------------------------------------------------------------
--                  TIPO DE CONCEPTO (EXPENSA, MULTA, APORTE, ETC.)
----------------------------------------------------------------------------
CREATE SEQUENCE public.cn_tipo_concepto_id_seq START WITH 1;

CREATE TABLE public.cn_tipo_concepto (
  idtipo_concepto   INTEGER DEFAULT NEXTVAL('public.cn_tipo_concepto_id_seq') NOT NULL,
  nombre            VARCHAR(50) NOT NULL UNIQUE, -- Ej: 'EXPENSA', 'MULTA', 'APORTE'
  descripcion       TEXT,
  estado            BOOLEAN NOT NULL DEFAULT TRUE,
  PRIMARY KEY (idtipo_concepto)
);

-- Valores iniciales
INSERT INTO public.cn_tipo_concepto (nombre, descripcion) VALUES
('EXPENSA', 'Pago mensual por mantenimiento y servicios'),
('MULTA', 'Penalización por incumplimientos'),
('APORTE', 'Contribución voluntaria o extraordinaria');


----------------------------------------------------------------------------
--                  CONFIGURACIÓN DE PRECIOS DE CONCEPTOS
----------------------------------------------------------------------------
CREATE SEQUENCE public.cn_concepto_precio_idconcepto_seq START WITH 1;

CREATE TABLE public.cn_concepto_precio (
  idconcepto          INTEGER DEFAULT NEXTVAL('public.cn_concepto_precio_idconcepto_seq') NOT NULL,
  fecha_alta          TIMESTAMP DEFAULT now() NULL,
  idusuario_alta      INTEGER NOT NULL,
  idtipo_concepto     INTEGER NOT NULL,
  nombre              VARCHAR(100) NOT NULL,
  descripcion         TEXT,
  monto               NUMERIC(12,2) NOT NULL,
  vigente_desde       DATE NOT NULL,
  vigente_hasta       DATE,
  estado              BOOLEAN NOT NULL DEFAULT TRUE,
  PRIMARY KEY (idconcepto),
  FOREIGN KEY (idusuario_alta) REFERENCES public.ad_usuario(id),
  FOREIGN KEY (idtipo_concepto) REFERENCES public.cn_tipo_concepto(idtipo_concepto)
);



----------------------------------------------------------------------------
--           ASIGNACIÓN DE CONCEPTOS A UNIDADES HABITACIONALES
----------------------------------------------------------------------------
CREATE SEQUENCE public.cn_unidad_concepto_id_seq START WITH 1;

CREATE TABLE public.ad_unidad_concepto (
  id               INTEGER DEFAULT NEXTVAL('public.cn_unidad_concepto_id_seq') NOT NULL,
  idunidad         INTEGER NOT NULL,
  idconcepto       INTEGER NOT NULL,
  fecha_asignacion TIMESTAMP DEFAULT now() NULL,
  monto_personalizado NUMERIC(12,2), -- opcional si se quiere sobrescribir el precio base
  estado           BOOLEAN NOT NULL DEFAULT TRUE,
  PRIMARY KEY (id),
  FOREIGN KEY (idunidad) REFERENCES public.ad_unidad(idunidad),
  FOREIGN KEY (idconcepto) REFERENCES public.cn_concepto_precio(idconcepto)
);



----------------------------------------------------------------------------
--                          FORMAS DE PAGO
----------------------------------------------------------------------------
CREATE SEQUENCE public.cn_forma_pago_id_seq START WITH 1;

CREATE TABLE public.cn_forma_pago (
  idformapago     INTEGER DEFAULT NEXTVAL('public.cn_forma_pago_id_seq') NOT NULL,
  nombre          VARCHAR(50) NOT NULL UNIQUE,
  descripcion     TEXT,
  estado          BOOLEAN NOT NULL DEFAULT TRUE,
  PRIMARY KEY (idformapago)
);

-- Valores iniciales
INSERT INTO public.cn_forma_pago (nombre, descripcion) VALUES
('EFECTIVO', 'Pago en efectivo'),
('QR', 'Pago mediante código QR'),
('TARJETA', 'Pago con tarjeta de débito o crédito');


----------------------------------------------------------------------------
--                          CUOTAS MENSUALES
----------------------------------------------------------------------------
CREATE SEQUENCE public.cn_cuota_id_seq START WITH 1;

CREATE TABLE public.cn_cuota (
  idcuota            INTEGER DEFAULT NEXTVAL('public.cn_cuota_id_seq') NOT NULL,
  idunidad           INTEGER NOT NULL,
  idconcepto         INTEGER NOT NULL,
  periodo            VARCHAR(7) NOT NULL, -- formato 'YYYY-MM'
  fecha_generacion   TIMESTAMP DEFAULT now() NULL,
  monto              NUMERIC(12,2) NOT NULL,
  estado_pago        VARCHAR(20) NOT NULL DEFAULT 'PENDIENTE', -- 'PENDIENTE', 'PAGADO', 'VENCIDO'
  fecha_pago         TIMESTAMP,
  idformapago        INTEGER, -- puede ser NULL si aún no se ha pagado
  observaciones      TEXT,
  PRIMARY KEY (idcuota),
  FOREIGN KEY (idunidad) REFERENCES public.ad_unidad(idunidad),
  FOREIGN KEY (idconcepto) REFERENCES public.cn_concepto_precio(idconcepto),
  FOREIGN KEY (idformapago) REFERENCES public.cn_forma_pago(idformapago)
);


----------------------------------------------------------------------------
--                          ÁREAS COMUNES
----------------------------------------------------------------------------
CREATE SEQUENCE public.ad_area_comun_id_seq START WITH 1;

CREATE TABLE public.ad_area_comun (
  idarea          INTEGER DEFAULT NEXTVAL('public.ad_area_comun_id_seq') NOT NULL,
  nombre          VARCHAR(100) NOT NULL,
  descripcion     TEXT,
  capacidad       INTEGER NOT NULL,
  horario_inicio  TIME NOT NULL, -- Ej: 08:00
  horario_fin     TIME NOT NULL, -- Ej: 22:00
  estado          BOOLEAN NOT NULL DEFAULT TRUE,
  PRIMARY KEY (idarea)
);


----------------------------------------------------------------------------
--                          RESERVAS DE ÁREAS COMUNES
----------------------------------------------------------------------------
CREATE SEQUENCE public.ad_reserva_area_id_seq START WITH 1;

CREATE TABLE public.ad_reserva_area (
  idreserva        INTEGER DEFAULT NEXTVAL('public.ad_reserva_area_id_seq') NOT NULL,
  idarea           INTEGER NOT NULL,
  idunidad         INTEGER NOT NULL,
  idusuario        INTEGER NOT NULL,
  fecha_reserva    DATE NOT NULL,
  hora_inicio      TIME NOT NULL,
  hora_fin         TIME NOT NULL,
  estado           VARCHAR(20) NOT NULL DEFAULT 'PENDIENTE', -- 'PENDIENTE', 'CONFIRMADA', 'CANCELADA'
  observaciones    TEXT,
  fecha_creacion   TIMESTAMP DEFAULT now(),
  PRIMARY KEY (idreserva),
  FOREIGN KEY (idarea) REFERENCES public.ad_area_comun(idarea),
  FOREIGN KEY (idusuario) REFERENCES public.ad_usuario(id),
  FOREIGN KEY (idunidad) REFERENCES public.ad_unidad(idunidad)
);


----------------------------------------------------------------------------
--                  TAREAS DE MANTENIMIENTO
----------------------------------------------------------------------------
CREATE SEQUENCE public.ad_tarea_mantenimiento_id_seq START WITH 1;

CREATE TABLE public.ad_tarea_mantenimiento (
  idtarea           INTEGER DEFAULT NEXTVAL('public.ad_tarea_mantenimiento_id_seq') NOT NULL,
  descripcion       TEXT NOT NULL,
  responsable       VARCHAR(100) NOT NULL, -- nombre o empresa
  tipo              VARCHAR(20) NOT NULL, -- 'INTERNO', 'EXTERNO'
  fecha_programada  DATE NOT NULL,
  fecha_ejecucion   DATE,
  estado            VARCHAR(20) NOT NULL DEFAULT 'PENDIENTE', -- 'PENDIENTE', 'EN PROCESO', 'COMPLETADA'
  costo             NUMERIC(12,2),
  observaciones     TEXT,
  fecha_registro    TIMESTAMP DEFAULT now(),
  idusuario_alta    INTEGER NOT NULL,
  PRIMARY KEY (idtarea),
  FOREIGN KEY (idusuario_alta) REFERENCES public.ad_usuario(id)
);

----------------------------------------------------------------------------
--                  MANTENIMIENTOS PREVENTIVOS
----------------------------------------------------------------------------
CREATE SEQUENCE public.ad_mantenimiento_preventivo_id_seq START WITH 1;

CREATE TABLE public.ad_mantenimiento_preventivo (
  idpreventivo      INTEGER DEFAULT NEXTVAL('public.ad_mantenimiento_preventivo_id_seq') NOT NULL,
  idarea            INTEGER NOT NULL,
  frecuencia        VARCHAR(20) NOT NULL, -- 'MENSUAL', 'TRIMESTRAL', etc.
  ultima_fecha      DATE,
  estado            BOOLEAN NOT NULL DEFAULT TRUE,
  observaciones     TEXT,
  fecha_registro    TIMESTAMP DEFAULT now(),
  idusuario_alta    INTEGER NOT NULL,
  PRIMARY KEY (idpreventivo),
  FOREIGN KEY (idarea) REFERENCES public.ad_area_comun(idarea),
  FOREIGN KEY (idusuario_alta) REFERENCES public.ad_usuario(id)
);
